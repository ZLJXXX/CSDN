数据结构】栈和队列
原创fighting QAQ 最后发布于2020-03-20 09:50:11 阅读数 6  收藏
编辑 展开
栈和队列
前言：栈和队列的数据结构较为简单，我们介绍完其功能后处理道面试题

栈
1.概念及结构
栈：一种特殊的线性表，其只允许在固定的一端进行插入和删除元素操作。进行数据插入和删除操作的一端
称为栈顶，另一端称为栈底。栈中的数据元素遵守后进先出LIFO（Last In First Out）的原则。
压栈：栈的插入操作叫做进栈/压栈/入栈，入数据在栈顶。
2.栈的实现
栈的实现一般可以使用数组或者链表实现，相对而言数组的结构实现更优一些。因为数组在尾上插入数据的
代价比较小。（栈可以看成只能尾插和尾删的顺序表）

和顺序表代码基本相似，不附代码了

队列
1.概念及结构
队列：只允许在一端进行插入数据操作，在另一端进行删除数据操作的特殊线性表，队列具有先进先出FIFO(First In First Out)
入队列：进行插入操作的一端称为队尾
出队列：进行删除操作的一端称为队头

2.队列的实现
队列也可以数组和链表的结构实现，使用链表的结构实现更优一些，因为如果使用数组的结构，出队列在数
组头上出数据，效率会比较低。（使用链表，因为顺序表头插效率低）

面试题
有效的括号
给定一个只包括 ‘(’，’)’，’{’，’}’，’[’，’]’ 的字符串，判断字符串是否有效。
有效字符串需满足：
左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。
示例 1:

输入: “()”
输出: true

示例 2:

输入: “()[]{}”
输出: true

示例 3:

输入: “(]”
输出: false

示例 4:

输入: “([)]”
输出: false

示例 5:

输入: “{[]}”
输出: true

题目解析
左括号全部入栈，若与右括号匹配，则出栈
情况分析
1.左括号多：栈底不为空，false；
2.右括号多：若左括号全部匹配完了，标记栈底，若右括号无法匹配，false
3.一样多，但是（[）]这种情况右括号不能和栈顶元素匹配，无法出栈，false
4.字符串为空或最后栈底元素和标记相等时，true

class Solution {
public:
    bool isValid(string s) {
        //使用c++STL库里面的栈
        stack<char> p;
        p.push('#');//输入栈底标记元素
        char arr[125];//通过数组进行括号匹配
        arr['('] = ')';
        arr['['] = ']';
        arr['{'] = '}';
        if(s.empty())
        {
            return true;//栈为空返回true
        }
        for(auto e:s) //范围for 遍历字符串
        {
            if(e == '('||e=='['||e=='{')//左括号入栈
            {
                p.push(e);
            }
            else if(arr[p.top()] == e)
            {
                p.pop();
            }else{
                return false; //情况二和情况三
            }
        }
        if(p.top() == '#')
        {
            return true;
        }
        return false;
    }
};
————————————————
版权声明：本文为CSDN博主「fighting QAQ」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_43676757/article/details/104974762
