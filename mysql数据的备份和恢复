MySQL数据的备份和恢复

weixin_42099301 2020-08-22 12:31:46  1085  收藏 24
分类专栏： 数据库
版权
MySQL数据的备份和恢复
文章目录
MySQL数据的备份和恢复
1. 数据备份的重要性
2. 数据库备份的分类
3. 常见的备份方法
4. MySQL完全备份
(1) 物理冷备份与恢复
(2) mysqldump备份与恢复
(3) MySQL物理冷备份及恢复
5. mysqldump备份数据库
(1) mysqldump命令对单个库进行完全备份
(2) 单库备份的示例
(3) mysqldump命令对多个库进行完全备份
(4) 对所有库进行完全备份
(5) mysqldump可针对库内特定的表进行备份
6. 恢复数据库
(1) 使用source恢复数据库的步骤
(2) 使用mysql命令恢复数据
(3) 恢复表的操作
1. 数据备份的重要性
在生产环境中，数据的安全性至关重要
任何数据的丢失都可能产生严重的后果
造成数据丢失的原因
程序错误
人为操作错误
运算错误
磁盘故障
灾难（如火灾、地震）和盗窃
2. 数据库备份的分类
物理备份：对数据库操作系统的物理文件（如数据文件、日志文件等）的备份
物理备份方法
冷备份（脱机备份）：是在关闭数据库的时候进行的
热备份（联机备份）：数据库处于运行状态，依赖于数据库的日志文件
温备份：数据库锁定表格（不可写入但可读）的状态下进行备份操作
逻辑备份：对数据库逻辑组件（如：表等数据库对象）的备份
从数据库的备份策略角度，备份可分为

完全备份：每次对数据库进行完整的备份
差异备份：备份自从上次完全备份之后被修改过的文件
增量备份：只有在上次完全备份或者增量备份后被修改的文件才会被备份
3. 常见的备份方法
(1) 物理冷备

备份时数据库处于关闭状态，直接打包数据库文件
备份速度快，恢复时也是最简单的
(2) 专用备份工具mydump或mysqlhotcopy

mysqldump常用的逻辑备份工具
mysqlhotcopy仅拥有备份MyISAM和ARCHIVE表
(3) 启用二进制日志进行增量备份

进行增量备份，需要刷新二进制日志
(4) 第三方工具备份

免费的MySQL热备份软件Percona XtraBackup
4. MySQL完全备份
是对整个数据库、数据库结构和文件结构的备份
保存的是备份完成时刻的数据库
是差异备份与增量备份的基础
优点

备份与恢复操作简单方便
缺点

数据存在大量的重复
占用大量的备份空间
备份与恢复时间长
(1) 物理冷备份与恢复
关闭MySQL数据库
使用tar命令直接打包数据库文件夹
直接替换现有MySQL目录即可
(2) mysqldump备份与恢复
MySQL自带的备份工具，可方便实现对MySQL的备份
可以将指定的库、表导出为SQL脚本
使用命令mysql导入备份的数据
(3) MySQL物理冷备份及恢复
物理冷备份

[root@localhost ~]# systemctl stop mysqld
[root@localhost ~]# mkdir /backup
[root@localhost ~]# tar zcf /backup/mysql_all-$(date +%F).tar.gz /usr/local/mysql/data/

1
2
3
4
恢复数据库


[root@localhost ~]# mkdir bak
[root@localhost ~]# mv /usr/local/mysql/data/ /bak/
[root@localhost ~]# mkdir restore
[root@localhost ~]# tar zxf /backup/mysql_all-2020-01-02.tar.gz -C restore/
[root@localhost ~]# mv restore/usr/local/mysql/data/ /usr/local/mysql/
[root@localhost ~]# systemctl start mysqld

1
2
3
4
5
6
7
8
5. mysqldump备份数据库
(1) mysqldump命令对单个库进行完全备份
[root@localhost ~]#mysqldump -u 用户名 -p [密码] [选项] [数据库名]  > /备份路径/备份文件名
1
(2) 单库备份的示例

[root@localhost ~]#mysqldump -u root –p auth > /backup/auth.sql
[root@localhost ~]#mysqldump -u root –p mysql > /bakcup/mysql.sql

1
2
3
4
(3) mysqldump命令对多个库进行完全备份
[root@localhost ~]#mysqldump -u 用户名 -p [密码] [选项]  --databases  库名 1  [库名2] …  >  /备份路径/备份文件名

1
2
多库备份的示例


[root@localhost ~]#mysqldump -u root –p  --databases  auth mysql > /backup/databases-auth-mysql.sql

1
2
3
(4) 对所有库进行完全备份

[root@localhost ~]#mysqldump -u 用户名 -p [密码] [选项]  --all-databases  >  /备份路径/备份文件名

1
2
3
所有库备份的示例

[root@localhost ~]#mysqldump -u root -p --opt --all-databases > /backup/all-data.sql

1
2
(5) mysqldump可针对库内特定的表进行备份
使用mysqldump备份表的操作

[root@localhost ~]#mysqldump -u 用户名 -p [密码] [选项] 数据库名  表名 > /备份路径/备份文件名 

1
2
备份表的示例

[root@localhost ~]#mysqldump -u root -p mysql user > /backup/mysql-user.sql

1
2
6. 恢复数据库
使用mysqldump导出的脚本，可使用导入的方法
source命令
mysql命令
(1) 使用source恢复数据库的步骤
登录到MySQL数据库
执行source 备份sql脚本的路径
source 恢复的示例
MySQL [(none)]> source /backup/all-data.sql

1
2
(2) 使用mysql命令恢复数据
[root@localhost ~]#mysql -u 用户名 -p [密码] < 库备份脚本的路径
1
mysql 命令恢复的示例


[root@localhost ~]#mysql -u root -p  < /backup/all-data.sql

1
2
3
(3) 恢复表的操作
恢复表时同样可以使用source或者mysql命令
source恢复表的操作与恢复库的操作相同
当备份文件中只包含表的备份，而不包括创建库的语句时，必须指定库名，且目标库必须存在

[root@localhost ~]#mysql -u 用户名 -p [密码] < 表备份脚本的路径

[root@localhost ~]#mysql -u root -p  mysql < /backup/mysql-user.sql


1
2
3
4
5
6
在生产环境中，可以使用Shell脚本自动实现定时备份

案例


cd /opt
mkdir server 
cd /server
vim mysqld.sh    ##定时备份脚本
#!/bin/bash
filename=data'date +%y%m%d'.sql   # 防止每次备份的数据库都把前面的一次备份给覆盖了，所以每次备份的文件都要不一样的命名
/usr/local/mysql/bin/mysqldump -u root -p123  【备份的数据库名】 > /opt/server/data.sql

wq  ##保存退出

chmod 777 mysqld.sh   ##给脚本文件设置权限


##设置周期性任务进行每周5下午五点半备份

crontab -e 

30 5 * * 5 /opt/server/mysqld.sh
